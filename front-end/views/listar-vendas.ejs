<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listar Produtos</title>

    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.1/css/dataTables.dataTables.min.css">
    <link rel="stylesheet" href="/styles/listar.css">
</head>

<body>
    <header>
        <h1>Listar Vendas</h1>
        <h2>Acompanhe aqui o cadastro de todas as suas vendas</h2>
    </header>

    <main>
        <section class="tabela-container">
            <table id="tabela" class="display">
                <thead>
                    <tr>
                        <th>Código Venda</th>
                        <th>Cliente</th>
                        <th>Data Venda</th>
                        <th>Subtotal</th>
                        <th>Ações</th>
                    </tr>
                </thead>
            </table>
        </section>

        <div class="button-group">
            <button onclick="window.location.href='/'">Voltar</button>
        </div>
    </main>

    <footer>
        <p>&copy; 2025 Raffi Estoque</p>
    </footer>
</body>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="http://cdn.datatables.net/2.3.1/js/dataTables.min.js"></script>
<script>
    let table = new DataTable('#tabela', {
        language: {
            decimal: ",",
            thousands: ".",
            search: "Buscar:",
            lengthMenu: "Mostrar _MENU_ registros por página",
            zeroRecords: "Nenhum produto encontrado",
            info: "Mostrando _START_ a _END_ de _TOTAL_ registros",
            infoEmpty: "Nenhum registro disponível",
            infoFiltered: "(filtrado de _MAX_ registros no total)",
            paginate: {
                first: "Primeira",
                last: "Última",
                next: "Próxima",
                previous: "Anterior"
            },
            emptyTable: "Nenhum produto cadastrado"
        }
    });

    window.onload = () => {
        fetch('/vendas/listar-vendas-backend')
            .then(res => res.json())
            .then(async data => {
                if (data && Array.isArray(data)) {
                    const table = $('#tabela').DataTable();

                    for (const venda of data) {
                        const nomeCliente = await buscarNomeCliente(venda.codCliente);

                        const row = [
                            venda.codVenda || '',
                            nomeCliente,
                            venda.dataVenda || '',
                            venda.valorTotal != null ? `R$ ${venda.valorTotal}` : '',
                            `<button class="btn-excluir" data-id="${venda.codVenda}">Excluir</button>`
                        ];

                        const newRow = table.row.add(row).draw().node();

                        const headers = [
                            'Código Venda', 'Cliente', 'Data Venda', 'Subtotal', 'Ações'
                        ];

                        $(newRow).find('td').each(function (index) {
                            $(this).attr('data-label', headers[index]);
                        });
                    }
                } else {
                    console.error('Erro ao buscar produtos:', data.error || 'Resposta inesperada');
                }
            })
            .catch(error => {
                console.error('Erro de requisição:', error);
            });
    };

    $('#tabela').on('click', '.btn-excluir', function () {
        const id = $(this).data('id');

        if (confirm('Deseja realmente excluir esta venda? A deleção pode alterar o estoque dos produtos vendidos.')) {
            fetch(`/vendas/deletar-venda-backend/${id}`, {
                method: 'DELETE'
            })
                .then(res => {
                    if (!res.ok) throw new Error('Erro ao excluir');
                    return res.json();
                })
                .then(result => {
                    alert('Venda excluída com sucesso!');
                    $('#tabela').DataTable().row($(this).parents('tr')).remove().draw();
                })
                .catch(err => {
                    console.error('Erro:', err);
                    alert('Erro ao excluir venda.');
                });
        }
    });

    async function buscarNomeCliente(id) {
        try {
            const res = await fetch(`/clientes/lista-cliente-id-backend/${id}`); //
            const data = await res.json();
            console.log(`Cliente encontrado: ${data.nomeFornecedor}`);
            return data.nomeCliente || 'Cliente não encontrado';
        } catch (err) {
            console.error(`Erro ao buscar cliente ${id}:`, err);
            return 'Erro ao buscar cliente';
        }
    }

</script>

</html>